<?php

namespace App;

use App\Enums\LeaveType;
use BenSampo\Enum\Traits\CastsEnums;
use Carbon\Carbon;
use Illuminate\Database\Eloquent\Model;

/**
 * @method static where(string $string, \Illuminate\Session\SessionManager|\Illuminate\Session\Store $session)
 */
class Leave extends Model
{
    use CastsEnums;

    protected $casualLeave = 15;
    protected $annualLeave = 60;

    protected $fillable = ['from', 'to', 'type', 'days'];

    protected $enumCasts = [
        'type' => LeaveType::class
    ];


    /**
     * @param $value
     * @return false|string
     */
    public function getFromAttribute($value)
    {
        return date('d-m-Y', strtotime($value));
        // Date of Birth
    }

    /**
     * @param $value
     */
    public function setFromAttribute($value)
    {
        $this->attributes['from'] = date('Y-m-d', strtotime($value));
    }


    /**
     * @param $value
     * @return false|string
     */
    public function getToAttribute($value)
    {
        return date('d-m-Y', strtotime($value));
    }

    /**
     * @param $value
     */
    public function setToAttribute($value)
    {
        $this->attributes['to'] = date('Y-m-d', strtotime($value));
    }

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        self::creating(function ($model) {
            $model->setNoOfDaysLeave();
        });
    }

    /**
     * @param $value
     */
    public function setNoOfDaysLeave()
    {
        $this->attributes['days'] = (Carbon::parse($this->from)->diffInDays(Carbon::parse($this->to)));
    }


    /**
     * @param $value
     * @return mixed
     */
    public function setAnnualAttribute($value)
    {
        $this->attributes['annual'] = $value;
    }

    /**
     * @param $value
     * @return mixed
     */
    public function setCasualAttribute($value)
    {
        $this->attributes['casual'] = $value;
    }

    /**
     * @param $value
     * @return mixed
     */
    public function getAnnualAttribute($value)
    {
        return $value;
    }

    /**
     * @param $value
     * @return mixed
     */
    public function getCasualAttribute($value)
    {
        return $value;
    }


    /**
     * @param $value
     * @return int
     */
    public function getCasualRemainAttribute($value)
    {
        return $this->casualLeave - $this->casual;
    }

    /**
     * @return mixed
     */
    public function getAnnualRemainAttribute()
    {
        return $this->annualLeave - $this->annual;
    }

}
